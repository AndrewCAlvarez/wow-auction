generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        String  @id @default(cuid())
  title     String
  content   String?
  published Boolean @default(false)
  authorId  String?
  author    User?   @relation(fields: [authorId], references: [id])
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String?  @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  posts     Post[]

  @@map("users")
}

model Commodity {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  itemId     Int
  quantity   Int
  unit_price BigInt

  @@map("commodities")
}

model Auction {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  auctionId Int  @unique
  itemId    Int
  quantity  Int
  buyout    BigInt   

  @@map("auctions")
}

model Profession {
  id           Int      @id @default(autoincrement())
  professionId Int      @unique
  name         String
  Recipe       Recipe[]

  @@map("professions")
}

model Recipe {
  id             Int        @id @default(autoincrement())
  data           Json       @unique
  name           String
  professionId   Int
  allianceItemId Int?
  hordeItemId    Int?
  itemId         Int?
  category       String
  skillTierId    Int
  skillTierName  String
  profession     Profession @relation(fields: [professionId], references: [professionId])

  @@map("recipes")
}

model Item {
  id            String   @id @default(uuid())
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  name          String
  quality       String
  price_history Int[]
  media         String
  sell_price    Int

  @@map("items")
}
