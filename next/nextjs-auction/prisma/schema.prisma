// schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Post {
  id        String  @id @default(cuid())
  title     String
  content   String?
  published Boolean @default(false)
  author    User?   @relation(fields: [authorId], references: [id])
  authorId  String?
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String?  @unique
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  posts     Post[]

  @@map(name: "users")
}

model Commodity {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now()) @map(name: "created_at")
  updatedAt  DateTime @updatedAt @map(name: "updated_at")
  // item       Item     @relation(fields: [itemId], references: [id])
  itemId     Int
  quantity   Int
  unit_price BigInt

  @@map(name: "commodities")
}

model Auction {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now()) @map(name: "created_at")
  updatedAt  DateTime @updatedAt @map(name: "updated_at")
  // item       Item     @relation(fields: [itemId], references: [id])
  itemId     Int
  quantity   Int
  buyout     BigInt     @default(0)

  @@map(name: "auctions")
}

model Item {
  id                String              @id @default(uuid())
  createdAt         DateTime            @default(now()) @map(name: "created_at")
  updatedAt         DateTime            @updatedAt @map(name: "updated_at")
  name              String              
  quality           String
  price_history     Int[]
  media             String
  sell_price        Int

  // commodities       Commodity[]
  // auctions          Auction[]


  @@map(name: "items")
}
